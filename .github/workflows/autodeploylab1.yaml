name: Auto Deploy Lab1

on:
  push:
    branches: [main]

jobs:
  setup-server:
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      DISK_NAME: ${{ secrets.DISK_NAME }}
      VM_SIZE: ${{ secrets.VM_SIZE }}
      VM_NAME: ${{ secrets.VM_NAME }}
      VM_IMAGE: ${{ secrets.VM_IMAGE }}
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Delete VM
        run: |
          az vm delete \
            --resource-group $RESOURCE_GROUP \
            --name $VM_NAME -y
      - name: Delete Disk
        run: |
          az disk delete \
            --name $DISK_NAME \
            --resource-group $RESOURCE_GROUP -y
      - name: Create Disk
        run: |
          az disk create \
            --name $DISK_NAME \
            --resource-group $RESOURCE_GROUP \
            --size-gb 8
      - name: Create VM
        run: |
          az vm create \
            --resource-group $RESOURCE_GROUP \
            --name $VM_NAME \
            --image $VM_IMAGE \
            --admin-username ${{ secrets.SSH_USER }} \
            --admin-password ${{ secrets.SSH_PASSWORD }} \
            --attach-data-disks $DISK_NAME \
            --size $VM_SIZE
      - name: Open Port
        run: |
          az vm open-port \
            --port 8080 \
            --name $VM_NAME \
            --priority 1010 \
            --resource-group $RESOURCE_GROUP
      - name: Delete DNS record set
        run: |
          az network dns record-set a delete \
            --name @ \
            --resource-group $RESOURCE_GROUP \
            --zone-name ${{ secrets.HOST }} -y
      - name: Create a new DNS record
        run: |
          IP=$(az vm show -d -g $RESOURCE_GROUP -n $VM_NAME --query publicIps -o tsv)
          az network dns record-set a create \
            --name @ \
            --resource-group $RESOURCE_GROUP \
            --zone-name ${{ secrets.HOST }} -o none
          az network dns record-set a add-record --ipv4-address $IP \
            --record-set-name @ \
            --resource-group $RESOURCE_GROUP \
            --zone-name ${{ secrets.HOST }} \
            --ttl 300 -o none

  deploy:
    runs-on: ubuntu-latest
    name: Deploy the JAR file to server
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build Application
        run: ./gradlew build
      - name: Deploy package to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "build/libs/webapilab1-0.0.1-SNAPSHOT.jar"
          target: "INT493lab1"
      - name: Strat Application
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            # move to directory that collect the application file
            cd /home/azureuser/INT493lab1/build/libs
            # kill old task background
            kill $(pidof java)
            # run application on background
            java -jar webapilab1-0.0.1-SNAPSHOT.jar > app.log 2>&1 </dev/null &
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
